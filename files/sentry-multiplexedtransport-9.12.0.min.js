/*! @sentry/browser - multiplexedtransport 9.12.0 (4eb78e5) | https://github.com/getsentry/sentry-javascript */
!function(n){var t={};const r=globalThis,o="9.12.0";const e=["debug","info","warn","error","log","assert","trace"],c={};!function(n,t,e=r){const c=e.__SENTRY__=e.__SENTRY__||{},s=c[o]=c[o]||{};s[n]||(s[n]=t())}("logger",(function(){let n=!1;const t={enable:()=>{n=!0},disable:()=>{n=!1},isEnabled:()=>n};return e.forEach((n=>{t[n]=()=>{}})),t}));const s=/^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;function i(n){const t=s.exec(n);if(!t)return void function(n){if(!("console"in r))return n();const t=r.console,o={},e=Object.keys(c);e.forEach((n=>{const r=c[n];o[n]=t[n],t[n]=r}));try{return n()}finally{e.forEach((n=>{t[n]=o[n]}))}}((()=>{console.error(`Invalid Sentry Dsn: ${n}`)}));const[o,e,i="",u="",f="",a=""]=t.slice(1);let l="",p=a;const d=p.split("/");if(d.length>1&&(l=d.slice(0,-1).join("/"),p=d.pop()),p){const n=p.match(/^\d+/);n&&(p=n[0])}return{protocol:(v={host:u,pass:i,path:l,projectId:p,port:f,protocol:o,publicKey:e}).protocol,publicKey:v.publicKey||"",pass:v.pass||"",host:v.host,port:v.port||"",path:v.path||"",projectId:v.projectId};var v}const u="7";function f(n,t,r){return t||`${function(n){return`${function(n){const t=n.protocol?`${n.protocol}:`:"",r=n.port?`:${n.port}`:"";return`${t}//${n.host}${r}${n.path?`/${n.path}`:""}/api/`}(n)}${n.projectId}/envelope/`}(n)}?${function(n,t){const r={sentry_version:u};return n.publicKey&&(r.sentry_key=n.publicKey),new URLSearchParams(r).toString()}(n)}`}function a(n,t){let r;return function(n,t){const r=n[1];for(const n of r)if(t(n,n[0].type))return!0}(n,((n,o)=>(t.includes(o)&&(r=Array.isArray(n)?n[1]:void 0),!!r))),r}for(var l in t.makeMultiplexedTransport=function(n,t){return r=>{const o=n(r),e=new Map;function c(t,o){const c=o?`${t}:${o}`:t;let s=e.get(c);if(!s){const u=i(t);if(!u)return;const l=f(u,r.tunnel);s=o?function(n,t){return r=>{const o=n(r);return{...o,send:async n=>{const r=a(n,["event","transaction","profile","replay_event"]);return r&&(r.release=t),o.send(n)}}}}(n,o)({...r,url:l}):n({...r,url:l}),e.set(c,s)}return[t,s]}return{send:async function(n){const r=t({envelope:n,getEvent:function(t){return a(n,t?.length?t:["event"])}}).map((n=>"string"==typeof n?c(n,void 0):c(n.dsn,n.release))).filter((n=>!!n)),e=r.length?r:[["",o]];return(await Promise.all(e.map((([t,r])=>r.send(function(n,t){return function(n,t=[]){return[n,t]}(t?{...n[0],dsn:t}:n[0],n[1])}(n,t))))))[0]},flush:async function(n){const t=[...e.values(),o];return(await Promise.all(t.map((t=>t.flush(n))))).every((n=>n))}}}},n.Sentry=n.Sentry||{},n.Sentry.Integrations=n.Sentry.Integrations||{},t)Object.prototype.hasOwnProperty.call(t,l)&&(n.Sentry.Integrations[l]=t[l],n.Sentry[l]=t[l])}(window);
//# sourceMappingURL=multiplexedtransport.min.js.map
